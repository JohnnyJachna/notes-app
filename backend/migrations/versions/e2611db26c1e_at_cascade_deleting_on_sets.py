"""at cascade deleting on sets

Revision ID: e2611db26c1e
Revises: df3377972e37
Create Date: 2025-08-08 21:53:55.250874

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e2611db26c1e'
down_revision: Union[str, Sequence[str], None] = 'df3377972e37'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('note_set_id_fkey'), 'note', type_='foreignkey')
    op.create_foreign_key(None, 'note', 'set', ['set_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('source_set_id_fkey'), 'source', type_='foreignkey')
    op.create_foreign_key(None, 'source', 'set', ['set_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('tag_set_id_fkey'), 'tag', type_='foreignkey')
    op.create_foreign_key(None, 'tag', 'set', ['set_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tag', type_='foreignkey')
    op.create_foreign_key(op.f('tag_set_id_fkey'), 'tag', 'set', ['set_id'], ['id'])
    op.drop_constraint(None, 'source', type_='foreignkey')
    op.create_foreign_key(op.f('source_set_id_fkey'), 'source', 'set', ['set_id'], ['id'])
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.create_foreign_key(op.f('note_set_id_fkey'), 'note', 'set', ['set_id'], ['id'])
    # ### end Alembic commands ###
