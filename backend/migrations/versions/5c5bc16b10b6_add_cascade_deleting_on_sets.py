"""add cascade deleting on sets

Revision ID: 5c5bc16b10b6
Revises: 6ad661fd830f
Create Date: 2025-08-08 22:15:05.023970

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c5bc16b10b6'
down_revision: Union[str, Sequence[str], None] = '6ad661fd830f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('link_source_note_source_id_fkey'), 'link_source_note', type_='foreignkey')
    op.drop_constraint(op.f('link_source_note_note_id_fkey'), 'link_source_note', type_='foreignkey')
    op.create_foreign_key(None, 'link_source_note', 'note', ['note_id'], ['id'])
    op.create_foreign_key(None, 'link_source_note', 'source', ['source_id'], ['id'])
    op.drop_constraint(op.f('link_tag_note_tag_id_fkey'), 'link_tag_note', type_='foreignkey')
    op.drop_constraint(op.f('link_tag_note_note_id_fkey'), 'link_tag_note', type_='foreignkey')
    op.create_foreign_key(None, 'link_tag_note', 'note', ['note_id'], ['id'])
    op.create_foreign_key(None, 'link_tag_note', 'tag', ['tag_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'link_tag_note', type_='foreignkey')
    op.drop_constraint(None, 'link_tag_note', type_='foreignkey')
    op.create_foreign_key(op.f('link_tag_note_note_id_fkey'), 'link_tag_note', 'note', ['note_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('link_tag_note_tag_id_fkey'), 'link_tag_note', 'tag', ['tag_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'link_source_note', type_='foreignkey')
    op.drop_constraint(None, 'link_source_note', type_='foreignkey')
    op.create_foreign_key(op.f('link_source_note_note_id_fkey'), 'link_source_note', 'note', ['note_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('link_source_note_source_id_fkey'), 'link_source_note', 'source', ['source_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
