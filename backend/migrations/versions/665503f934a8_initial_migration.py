"""Initial migration

Revision ID: 665503f934a8
Revises: 
Create Date: 2025-08-06 19:01:59.672069

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '665503f934a8'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_set_id'), 'set', ['id'], unique=False)
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('header', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('authors', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('publishers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pages', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('publish_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('access_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sources_id'), 'sources', ['id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_table('link_source_note',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('source_id', 'note_id')
    )
    op.create_table('link_tag_note',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'note_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('link_tag_note')
    op.drop_table('link_source_note')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_sources_id'), table_name='sources')
    op.drop_table('sources')
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_index(op.f('ix_set_id'), table_name='set')
    op.drop_table('set')
    # ### end Alembic commands ###
