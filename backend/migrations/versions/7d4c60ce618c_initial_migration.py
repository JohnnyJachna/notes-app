"""Initial migration

Revision ID: 7d4c60ce618c
Revises: 
Create Date: 2025-08-08 17:14:32.046682

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7d4c60ce618c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_set_id'), 'set', ['id'], unique=False)
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('header', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_note_id'), 'note', ['id'], unique=False)
    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('authors', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('publishers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pages', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('publish_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('update_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('access_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_id'), 'source', ['id'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['set.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=False)
    op.create_table('link_source_note',
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('source_id', 'note_id')
    )
    op.create_table('link_tag_note',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'note_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('link_tag_note')
    op.drop_table('link_source_note')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_source_id'), table_name='source')
    op.drop_table('source')
    op.drop_index(op.f('ix_note_id'), table_name='note')
    op.drop_table('note')
    op.drop_index(op.f('ix_set_id'), table_name='set')
    op.drop_table('set')
    # ### end Alembic commands ###
